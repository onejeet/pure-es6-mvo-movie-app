var model={api_url:"http://www.mocky.io/v2/5d336c403400005a00749ff9",data:[],currentList:[],search:"",sorting:{value:"",type:"asc"},main:document.querySelector(".app main"),moviesContainer:document.querySelector(".list-all"),libraryContainer:document.querySelector(".my-library"),searchInput:document.getElementById("search-movie"),sortingContainer:document.getElementById("sort").parentNode},view={init:function(){this.toggleCurrentPageState(octopus.findContainer("moviesContainer")),this.render()},toggleCurrentPageState:function(t){t.setAttribute("data-state","active"),t.nextElementSibling?t.nextElementSibling.setAttribute("data-state","inactive"):t.previousElementSibling.setAttribute("data-state","inactive")},toggleButtonState:function(t,e){e?(t.querySelector(".add-button").textContent="Added",setTimeout(function(){t.querySelector(".add-button").textContent="Remove",t.querySelector(".add-button").className+=" remove"},300)):(t.querySelector(".add-button").textContent="Removed",setTimeout(function(){t.querySelector(".add-button").textContent="Add",t.querySelector(".add-button").className="add-button"},300))},clearSearch:function(){octopus.findContainer("searchInput").value=""},cardBuilder:function(t){var e=document.createElement("div");e.setAttribute("class","card"),e.setAttribute("id",t.id);var n=t.library?"remove":"",r=t.library?"Remove":"Add";return e.innerHTML='<div class="thumb"><img src='+t.poster+'/><button class="add-button '+n+'">'+r+'</button></div><div class="info"><p>'+t.title+"</p><p>"+t.year+"</p></div>",e},renderSortingDirector:function(){var t=document.createElement("button");t.setAttribute("class","sorting-director"),t.setAttribute("title","Toggle the Order"),t.innerHTML="&varr;",octopus.findContainer("sortingContainer").prepend(t)},render:function(){var e=this,n=document.createElement("div"),t=octopus.findContainer("main");n.setAttribute("id","movies-list"),octopus.sort();var r=octopus.search(octopus.getCurrentList());r.length&&0<r.length?r.map(function(t){el=e.cardBuilder(t),octopus.bindAddEvents(el,t),n.appendChild(el)}):n.innerHTML="No Movies Found!",t.innerHTML="",t.appendChild(n)}},octopus={init:function(){this.fetchData(),this.bindEvents()},bindEvents:function(){this.findContainer("libraryContainer").addEventListener("click",function(t){model.currentList=model.data.filter(function(t){return t.library}),view.toggleCurrentPageState(t.target),view.render()}),this.findContainer("moviesContainer").addEventListener("click",function(t){model.currentList=model.data.filter(function(t){return!t.library}),view.toggleCurrentPageState(t.target),view.render()}),this.findContainer("searchInput").addEventListener("input",function(t){model.search=t.target.value,view.render()}),this.findContainer("sortingContainer").addEventListener("click",function(t){"sorting-director"===t.target.className?(model.sorting.type="asc"===model.sorting.type?"dsc":"asc",view.render()):"none"!==t.target.value&&model.sorting.value!==t.target.value&&(model.sorting.value=t.target.value,view.render(),this.querySelector("button.sorting-director")||view.renderSortingDirector())})},bindAddEvents:function(e,n){e.addEventListener("click",function(t){n.library?(view.toggleButtonState(e,!1),octopus.removeFromLibrary(n)):(octopus.addToLibrary(n),view.toggleButtonState(e,!0))})},findContainer:function(t){return model[t]},getCurrentList:function(){return model.currentList},removeFromLibrary:function(t){t.library=!1,"active"===this.findContainer("libraryContainer").getAttribute("data-state")&&(model.currentList=model.currentList.filter(function(t){return t.library}),view.render())},addToLibrary:function(t){t.library=!0},search:function(t){var e=model.search;return t.filter(function(t){return-1!==t.title.toLowerCase().indexOf(e.toLowerCase())})},sort:function(){var t,n=model.sorting.value,e=model.currentList;t="year"===n?e.sort(function(t,e){return"asc"===model.sorting.type?e[n]-t[n]:t[n]-e[n]}):"title"===n?e.sort(function(t,e){return"asc"===model.sorting.type?t[n].localeCompare(e[n]):e[n].localeCompare(t[n])}):e,model.currentList=t},fetchData:function(){fetch(model.api_url).then(function(t){return t.json()}).then(function(t){model.data=t,model.currentList=t,view.init()}).catch(function(t){return console.log("Error: "+t)})}};octopus.init();